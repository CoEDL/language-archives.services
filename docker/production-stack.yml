version: "3"

#https://medium.com/@pentacent/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71a

volumes:
    PDSC_STACK_DB_VOLUME:
        driver: local

networks:
    pdscnet:

services:
    web:
        image: pdsc/website
        deploy:
            replicas: 2
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    memory: 256M
        ports:
            - "80:80"
            - "443:443"
        command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
        volumes:
            - /srv/website:/var/www/language-archives.services
            - /srv/olacvis:/var/www/olacvis
            - /srv/downloads:/var/www/downloads
            - /srv/mobile-viewer:/var/www/mobile-viewer
            - /srv/certbot/conf:/etc/letsencrypt
            - /srv/certbot/www:/var/www/certbot
        networks:
            - pdscnet

    certbot:
        image: certbot/certbot
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        volumes:
            - /srv/certbot/conf:/etc/letsencrypt
            - /srv/certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

    api-service:
        image: pdsc/api-service-production
        hostname: api-service
        tty: true
        environment:
            TERM: "xterm-256color"
            NODE_ENV: "development"
            DEBUG: "pdsc:*"
            PDSC_SERVER_PORT: "3000"
            PDSC_ADMIN_PASSWORD: "$ADMIN_PASSWORD"
            PDSC_DB_HOST: "api-db"
            PDSC_DB_PORT: "5432"
            PDSC_DB_USER: "paradisec"
            PDSC_DB_PASSWORD: "$POSTGRES_PASSWORD"
            PDSC_DB_DATABASE: "paradisec"
            PDSC_HARVEST_DOWNLOAD: "/srv/data/scrape"
            PDSC_HARVEST_REPOSITORY: "/srv/data/repository"
        deploy:
            replicas: 3
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    memory: 512M
        volumes:
            - /srv/api:/srv/data
        command: ["pm2-runtime", "start", "ecosystem.config.js"]
        networks:
            - pdscnet

    api-db:
        image: postgres:10-alpine
        hostname: api-db
        tty: true
        environment:
            TERM: "xterm-256color"
            NODE_ENV: "development"
            POSTGRES_PASSWORD: "$POSTGRES_PASSWORD"
            POSTGRES_USER: "paradisec"
            POSTGRES_DB: "paradisec"
            PGDATA: /postgresql/data
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    memory: 512M
        volumes:
            - PDSC_STACK_DB_VOLUME:/postgresql
        networks:
            - pdscnet
